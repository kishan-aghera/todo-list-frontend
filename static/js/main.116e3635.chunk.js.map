{"version":3,"sources":["components/auth/Registration.js","components/auth/Login.js","components/Home.js","components/NavBar.js","components/Unauthorized.js","components/Tasks/TaskForm.js","components/Tasks/Task.js","components/Tasks/TaskItem.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","email","password","password_confirmation","registrationErrors","handleSubmit","bind","handleChange","event","this","setState","target","name","value","axios","post","user","withCredentials","then","response","data","status","handleSuccessfulAuth","catch","error","console","log","preventDefault","Form","onSubmit","FormGroup","Input","type","placeholder","onChange","required","Button","color","Component","Login","loginErrors","logged_in","alert","Home","handleLogoutClick","handleLogin","history","push","delete","handleLogout","loggedInStatus","onClick","Container","Row","xs","Col","sm","Card","CardTitle","tag","NavBar","Navbar","light","expand","NavbarBrand","href","Nav","className","navbar","isLoggedIn","NavItem","NavLink","Unauthorized","Alert","to","TaskForm","useState","enteredName","setEnteredName","useEffect","existingName","user_id","isEdit","updateTaskHandler","addNewTaskHandler","Task","styles","padding","margin","CardText","style","updateHandler","id","i","deleteHandler","TaskItem","tasks","setTasks","edit","setEdit","index","setIndex","setExistingName","noRecord","setNoRecord","printNoTaskMessage","get","res","transformedData","Array","from","map","taskData","prev","length","newList","splice","printTasks","task","lists","updatedTaskData","put","App","checkLoginStatus","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"2YASqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,MAAO,GACPC,SAAU,GACVC,sBAAuB,GACvBC,mBAAoB,IAGtB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAXH,E,gDAcnB,SAAaE,GACXC,KAAKC,SAAL,eACGF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,0BAItC,SAAaL,GAAQ,IAAD,SACiCC,KAAKT,MAAhDC,EADU,EACVA,MAAOC,EADG,EACHA,SAAUC,EADP,EACOA,sBAEzBW,IACGC,KACC,0DACA,CACEC,KAAM,CACJf,MAAOA,EACPC,SAAUA,EACVC,sBAAuBA,IAG3B,CAAEc,iBAAiB,IAEpBC,MAAK,SAACC,GACwB,YAAzBA,EAASC,KAAKC,QAChB,EAAKtB,MAAMuB,qBAAqBH,EAASC,SAG5CG,OAAM,SAACC,GACNC,QAAQC,IAAI,uBAAwBF,MAGxChB,EAAMmB,mB,oBAGR,WACE,OACE,8BACE,eAACC,EAAA,EAAD,CAAMC,SAAUpB,KAAKJ,aAArB,UACE,cAACyB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLpB,KAAK,QACLqB,YAAY,QACZpB,MAAOJ,KAAKT,MAAMC,MAClBiC,SAAUzB,KAAKF,aACf4B,UAAQ,MAIZ,cAACL,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,WACLpB,KAAK,WACLqB,YAAY,WACZpB,MAAOJ,KAAKT,MAAME,SAClBgC,SAAUzB,KAAKF,aACf4B,UAAQ,MAIZ,cAACL,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,WACLpB,KAAK,wBACLqB,YAAY,wBACZpB,MAAOJ,KAAKT,MAAMG,sBAClB+B,SAAUzB,KAAKF,aACf4B,UAAQ,MAIZ,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUL,KAAK,SAA7B,+B,GArFgCM,aCArBC,E,kDACnB,WAAYxC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,MAAO,GACPC,SAAU,GACVsC,YAAa,IAGf,EAAKnC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVH,E,gDAanB,SAAaE,GACXC,KAAKC,SAAL,eACGF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,0BAItC,SAAaL,GAAQ,IAAD,SACUC,KAAKT,MAAzBC,EADU,EACVA,MAAOC,EADG,EACHA,SAEfY,IACGC,KACC,qDACA,CACEC,KAAM,CACJf,MAAOA,EACPC,SAAUA,IAGd,CAAEe,iBAAiB,IAEpBC,MAAK,SAACC,GACDA,EAASC,KAAKqB,UAChB,EAAK1C,MAAMuB,qBAAqBH,EAASC,MAGzCsB,MAAM,kDAGTnB,OAAM,SAACC,GACNC,QAAQC,IAAI,gBAAiBF,MAEjChB,EAAMmB,mB,oBAGR,WACE,OACE,8BACE,eAACC,EAAA,EAAD,CAAMC,SAAUpB,KAAKJ,aAArB,UACE,cAACyB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLpB,KAAK,QACLqB,YAAY,QACZpB,MAAOJ,KAAKT,MAAMC,MAClBiC,SAAUzB,KAAKF,aACf4B,UAAQ,MAIZ,cAACL,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,WACLpB,KAAK,WACLqB,YAAY,WACZpB,MAAOJ,KAAKT,MAAME,SAClBgC,SAAUzB,KAAKF,aACf4B,UAAQ,MAIZ,cAACC,EAAA,EAAD,CAAQJ,KAAK,SAAb,4B,GA1EyBM,aCKdK,E,kDACnB,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IAEDuB,qBAAuB,EAAKA,qBAAqBhB,KAA1B,gBAC5B,EAAKsC,kBAAoB,EAAKA,kBAAkBtC,KAAvB,gBAJR,E,wDAOnB,SAAqBc,GACnBX,KAAKV,MAAM8C,YAAYzB,GACvBX,KAAKV,MAAM+C,QAAQC,KAAK,mC,+BAG1B,WAAqB,IAAD,OAClBjC,IACGkC,OAAO,mDAAoD,CAAE/B,iBAAiB,IAC9EC,MAAK,SAAAC,GACJ,EAAKpB,MAAMkD,kBAEZ1B,OAAM,SAAAC,GACLC,QAAQC,IAAI,eAAgBF,Q,oBAIlC,WAAU,IAAD,OACP,OACE,8BAEmC,cAA9Bf,KAAKV,MAAMmD,eAER,cAACd,EAAA,EAAD,CAAQC,MAAM,SAASc,QAAS,kBAAM,EAAKP,qBAA3C,oBAGA,cAACQ,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,0BACA,cAAC,EAAD,CAAcrC,qBAAsBb,KAAKa,4BAG7C,cAACiC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,mBACA,cAAC,EAAD,CAAOrC,qBAAsBb,KAAKa,uC,GA5CtBgB,a,wCCsBnBsB,EA5BA,SAAC7D,GACd,OACE,8BACE,eAAC8D,EAAA,EAAD,CAAQxB,MAAM,QAAQyB,OAAK,EAACC,OAAO,KAAnC,UACE,cAACC,EAAA,EAAD,CAAaC,KAAK,sDAAlB,wBAEA,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAUC,QAAM,EAA/B,UAEIrE,EAAMsE,WACJ,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAASN,KAAK,gCAAd,yBAEA,KAGN,cAACK,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAS5D,OAAO,SAASsD,KAAK,sDAA9B,yCAGF,cAACK,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAS5D,OAAO,SAASsD,KAAK,qDAA9B,iD,yBCRGO,EAdM,WACnB,OACE,cAACpB,EAAA,EAAD,UACE,eAACqB,EAAA,EAAD,CAAOpC,MAAM,SAAb,4DAEE,uBAFF,gEAIE,uBACA,cAAC,IAAD,CAAMqC,GAAG,IAAT,wBC8COC,EAnDE,SAAC5E,GAAW,IAAD,EACY6E,mBAAS,IADrB,mBACnBC,EADmB,KACNC,EADM,KAyB1B,OALAC,qBAAU,WACRD,EAAe/E,EAAMiF,gBACpB,CAACjF,EAAMiF,eAIR,cAAC,WAAD,UAEKjF,EAAMsE,YAActE,EAAMkF,QAEzB,uBAAMpD,SAAU9B,EAAMmF,OAjBR,SAAC1E,GACrBA,EAAMmB,iBACN5B,EAAMoF,kBAAkBN,GACxBC,EAAe,KATM,SAACtE,GACtBA,EAAMmB,iBACN5B,EAAMqF,kBAAkBP,GACxBC,EAAe,KAoBT,UACE,uBACE9C,KAAK,OACLnB,MAAOgE,EACP5C,YAAY,YACZC,SAhCQ,SAAC1B,GACnBsE,EAAetE,EAAMG,OAAOE,QAgClBsB,UAAQ,IACV,cAACC,EAAA,EAAD,CACEC,MAAM,OACNL,KAAK,SAFP,SAIIjC,EAAMmF,OAAS,cAAgB,gBAInC,cAAC,EAAD,O,SC5CG,SAASG,EAAKtF,GAC3B,IAAMuF,EAAS,CACbC,QAAS,MACTC,OAAQ,SAGV,OACE,cAACpC,EAAA,EAAD,UACE,cAACK,EAAA,EAAD,UACE,eAACJ,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CAAKD,GAAG,IAAR,SACE,cAACmC,EAAA,EAAD,CACE9B,IAAI,KACJ+B,MAAOJ,EAFT,SAIGvF,EAAMa,SAIX,cAAC2C,EAAA,EAAD,UACE,cAACnB,EAAA,EAAD,CACEC,MAAM,YACNqD,MAAOJ,EACPnC,QAAS,kBAAMpD,EAAM4F,cAAc5F,EAAM6F,GAAI7F,EAAMa,KAAMb,EAAMkF,QAASlF,EAAM8F,IAHhF,sBASF,cAACtC,EAAA,EAAD,UACE,cAACnB,EAAA,EAAD,CACEC,MAAM,SACNqD,MAAOJ,EACPnC,QAAS,kBAAMpD,EAAM+F,cAAc/F,EAAM6F,GAAI7F,EAAM8F,IAHrD,6BCtBZ,IAiLeE,EAjLE,SAAChG,GAAW,IAAD,EACA6E,mBAAS,IADT,mBACnBoB,EADmB,KACZC,EADY,OAKFrB,oBAAS,GALP,mBAKnBsB,EALmB,KAKbC,EALa,OAMAvB,mBAAS,GANT,mBAMnBwB,EANmB,KAMZC,EANY,OAOczB,mBAAS,IAPvB,mBAOnBI,EAPmB,KAOLsB,EAPK,OAWM1B,oBAAS,GAXf,mBAWnB2B,EAXmB,KAWTC,EAXS,KAYpBC,EAAqB,WACzB,OAAQ,cAAChC,EAAA,EAAD,CAAOpC,MAAM,SAAb,8BAKV0C,qBAAU,WACRjE,IACG4F,IADH,0DAC0D3G,EAAMkF,QADhE,WAEG/D,MAAK,SAAAyF,GACJ,GAAwB,MAApBA,EAAIvF,KAAKC,QAAkBtB,EAAMsE,WACnCmC,GAAY,GACZC,QAEG,CACHD,GAAY,GACZ,IACMI,EADOC,MAAMC,KAAKH,EAAIvF,MACC2F,KAAI,SAACC,GAChC,MAAO,CACLpB,GAAIoB,EAASpB,GACbhF,KAAMoG,EAASpG,KACfqE,QAAS+B,EAAS/B,YAGtBgB,EAASW,SAGd,CAACV,EAAMK,EAAUxG,EAAMkF,QAASlF,EAAMsE,aAGzC,IAiBMsB,EAAgB,SAACC,EAAIhF,GACzBuF,GAAQ,GACRE,GAAUT,GACVU,EAAgB1F,IAmBZkF,EAAgB,SAACF,EAAIC,GACzB/E,IACGkC,OADH,0DAC6DjD,EAAMkF,QADnE,kBACoFW,IACjF1E,MAAK,WACJ+E,GAAS,SAACgB,GACR,GAAoB,IAAhBA,EAAKC,OAAc,CACrBV,GAAY,GACZ,IAAMW,EAAO,YAAOF,GAEpB,OADAE,EAAQC,OAAOvB,EAAG,GACK,IAAnBsB,EAAQD,QACVV,GAAY,GACL,KAGPA,GAAY,GACLW,GAKT,OADAX,GAAY,GACL,UAoBba,EAA+B,IAAjBrB,EAAMkB,OACtBlB,EAAMe,KAAI,SAACO,EAAMzB,GAAP,OACR,8BACE,cAACR,EAAD,CAEEO,GAAI0B,EAAK1B,GACTC,EAAGA,EACHjF,KAAM0G,EAAK1G,KACX+E,cAAeA,EACfG,cAAeA,EACfb,QAASlF,EAAMkF,SANVqC,EAAK1B,KAFJ0B,EAAK1B,OAWZW,EAAWE,IAAuB,KAGzC,OACE,cAAC,WAAD,UAEI1G,EAAMsE,WACJ,eAACjB,EAAA,EAAD,WACE,8BAEIrD,EAAMsE,YAActE,EAAMkF,SAC1B,cAAC7C,EAAA,EAAD,CACEC,MAAM,SACNc,QAAS,WAtCvBrC,IACGkC,OAAO,mDAAoD,CAAE/B,iBAAiB,IAC9EC,MAAK,WACJnB,EAAMkD,eACNlD,EAAM+C,QAAQC,KAAK,QAEpBxB,OAAM,SAAAC,GACLC,QAAQC,IAAI,eAAgBF,OA6BpB,sBASJ,8BACE,cAAC,EAAD,CACEoE,GAAIQ,EACJpB,aAAcA,EACdE,OAAQgB,EACRjB,QAASlF,EAAMkF,QACfZ,WAAYtE,EAAMsE,WAClB2B,MAAOA,EACPZ,kBAxHY,SAACxE,GACzB,IAAMoG,EAAW,CACfpG,KAAMA,GAGRE,IACGC,KADH,0DAC2DhB,EAAMkF,QADjE,UACkF+B,GAC/E9F,MAAK,SAAAC,GACJ,IAAMoG,EAAK,sBAAOvB,GAAP,CAAc7E,EAASC,OAClC6E,EAASsB,MAEVhG,OAAM,SAAAC,GACLC,QAAQC,IAAI,0BAA2BF,OA6G/B2D,kBA/FY,SAACvE,GACzB,IAAM4G,EAAkB,CACtB5G,KAAMA,GAGRE,IACG2G,IADH,0DAC0D1H,EAAMkF,QADhE,kBACiFmB,GAASoB,GACvFtG,MAAK,WACJiF,GAAQ,WA2FJ,uBAECkB,KAED,cAAC,EAAD,OC/KSK,E,kDACnB,aAAe,IAAD,8BACZ,gBAEK1H,MAAQ,CACXkD,eAAgB,gBAChBlC,KAAM,GACNqD,YAAY,GAGd,EAAKxB,YAAc,EAAKA,YAAYvC,KAAjB,gBACnB,EAAK2C,aAAe,EAAKA,aAAa3C,KAAlB,gBAVR,E,oDAcd,WAAoB,IAAD,OACjBQ,IACG4F,IAAI,sDAAuD,CAAEzF,iBAAiB,IAC9EC,MAAK,SAACC,GAEHA,EAASC,KAAKqB,WACgB,kBAA9B,EAAKzC,MAAMkD,eAEX,EAAKxC,SAAS,CACZwC,eAAgB,YAChBlC,KAAMG,EAASC,KAAKJ,KACpBqD,YAAY,KAGblD,EAASC,KAAKqB,UACgB,cAA9B,EAAKzC,MAAMkD,gBAEZ,EAAKxC,SAAS,CACZwC,eAAgB,gBAChBlC,KAAM,GACNqD,YAAY,OAIjB9C,OAAM,SAACC,GACNC,QAAQC,IAAI,oBAAqBF,Q,+BAIvC,WACEf,KAAKkH,qB,yBAGP,SAAYvG,GACVX,KAAKC,SAAS,CACZwC,eAAgB,YAChBlC,KAAMI,EAAKJ,KACXqD,YAAY,M,0BAKhB,WACE5D,KAAKC,SAAS,CACZwC,eAAgB,gBAChBlC,KAAM,GACNqD,YAAY,M,oBAKhB,WAAU,IAAD,OACP,OACE,sBAAKF,UAAU,MAAf,UACE,cAAC,EAAD,CAAQE,WAAY5D,KAAKT,MAAMqE,aAC/B,uBACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEuD,OAAK,EACLC,KAAM,sBACNC,OAAQ,SAAA/H,GAAK,OACX,cAAC,EAAD,2BACMA,GADN,IAEE8C,YAAa,EAAKA,YAClBI,aAAc,EAAKA,aACnBC,eAAgB,EAAKlD,MAAMkD,qBAIjC,cAAC,IAAD,CACE0E,OAAK,EACLC,KAAM,gCACNC,OAAQ,SAAA/H,GAAK,OACX,cAAC,EAAD,2BACMA,GADN,IAEEmD,eAAgB,EAAKlD,MAAMkD,eAC3BD,aAAc,EAAKA,aACnBgC,QAAS,EAAKjF,MAAMgB,KAAK4E,GACzBvB,WAAY,EAAKrE,MAAMqE,6B,GA9FR/B,aCFlByF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/G,MAAK,YAAkD,IAA/CgH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.116e3635.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { \n  Button, \n  Form, \n  FormGroup, \n  Input \n} from \"reactstrap\";\n\nexport default class Registration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      registrationErrors: \"\"\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    const { email, password, password_confirmation } = this.state;\n\n    axios\n      .post(\n        \"https://todo-list-rails-api.herokuapp.com/registrations\",\n        {\n          user: {\n            email: email,\n            password: password,\n            password_confirmation: password_confirmation\n          }\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        if (response.data.status === \"created\") {\n          this.props.handleSuccessfulAuth(response.data); // [Home.js 23]\n        }\n      })\n      .catch((error) => {\n        console.log(\"Registration Error: \", error);\n      });\n    \n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n              required\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              required\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Input\n              type=\"password\"\n              name=\"password_confirmation\"\n              placeholder=\"Password confirmation\"\n              value={this.state.password_confirmation}\n              onChange={this.handleChange}\n              required\n            />\n          </FormGroup>\n\n          <Button color=\"primary\" type=\"submit\">Register</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input\n} from \"reactstrap\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loginErrors: \"\"\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    const { email, password } = this.state;\n\n    axios\n      .post(\n        \"https://todo-list-rails-api.herokuapp.com/sessions\",\n        {\n          user: {\n            email: email,\n            password: password\n          }\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        if (response.data.logged_in) {\n          this.props.handleSuccessfulAuth(response.data); // [Home.js 23]\n        }\n        else {\n          alert(\"User does not exist. Please Register first.\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"Login Error: \", error);\n      });\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n              required\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              required\n            />\n          </FormGroup>\n\n          <Button type=\"submit\">Login</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { \n  Button, \n  Card, \n  CardTitle, \n  Row, \n  Col, \n  Container \n} from 'reactstrap';\n\nimport Registration from \"./auth/Registration\";\nimport Login from \"./auth/Login\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSuccessfulAuth = this.handleSuccessfulAuth.bind(this);\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\n  }\n\n  handleSuccessfulAuth(data) {\n    this.props.handleLogin(data); // [App.js 63]\n    this.props.history.push(\"/todo-list-frontend/dashboard\");\n  }\n\n  handleLogoutClick() {\n    axios\n      .delete(\"https://todo-list-rails-api.herokuapp.com/logout\", { withCredentials: true })\n      .then(response => {\n        this.props.handleLogout(); // [App.js 72]\n      })\n      .catch(error => {\n        console.log(\"Logout Error\", error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        {\n          (this.props.loggedInStatus === \"LOGGED_IN\") ?\n            (\n              <Button color=\"danger\" onClick={() => this.handleLogoutClick()}>Logout</Button>\n            ) :\n            (\n              <Container>\n                <Row xs=\"5\">\n                  <Col sm=\"6\">\n                    <Card>\n                      <CardTitle tag=\"h5\">Registration</CardTitle>\n                      <Registration handleSuccessfulAuth={this.handleSuccessfulAuth} />\n                    </Card>\n                  </Col>\n                  <Col sm=\"6\">\n                    <Card>\n                      <CardTitle tag=\"h5\">Login</CardTitle>\n                      <Login handleSuccessfulAuth={this.handleSuccessfulAuth} />\n                    </Card>\n                  </Col>\n                </Row>\n              </Container>\n            )\n        }\n      </div>\n    );\n  }\n}\n","import { \n  Navbar, \n  NavbarBrand, \n  Nav, \n  NavItem, \n  NavLink \n} from \"reactstrap\";\n\nconst NavBar = (props) => {\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"https://kishan-aghera.github.io/todo-list-frontend/\">To-do List</NavbarBrand>\n        \n        <Nav className=\"mr-auto\" navbar>\n          {\n            props.isLoggedIn ? (\n              <NavItem>\n                <NavLink href=\"/todo-list-frontend/dashboard\">Dashboard</NavLink>\n              </NavItem>\n            ) : null\n          }\n          \n          <NavItem>\n            <NavLink target=\"_blank\" href=\"https://github.com/kishan-aghera/todo-list-frontend\">Frontend React App Github</NavLink>\n          </NavItem>\n          \n          <NavItem>\n            <NavLink target=\"_blank\" href=\"https://github.com/kishan-aghera/todo-list-backend\">Backend Rails API Github</NavLink>\n          </NavItem>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import { Link } from 'react-router-dom';\nimport { \n  Alert, \n  Container \n} from 'reactstrap';\n\nconst Unauthorized = () => {\n  return (\n    <Container>\n      <Alert color=\"danger\">\n        Please Login and then you can use this feature.\n        <br />\n        You can get Login or Register by visiting the following link.\n        <br />\n        <Link to=\"/\">Home</Link>\n      </Alert>\n    </Container>\n  )\n};\n\nexport default Unauthorized;\n","import {\n  useState,\n  Fragment,\n  useEffect\n} from \"react\";\nimport { Button } from \"reactstrap\";\n\nimport Unauthorized from \"../Unauthorized\";\n\nconst TaskForm = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n\n  const nameHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const addTaskHandler = (event) => {\n    event.preventDefault();\n    props.addNewTaskHandler(enteredName); // [TaskItem.js 61]\n    setEnteredName('');\n  }\n\n  const updateHandler = (event) => {\n    event.preventDefault();\n    props.updateTaskHandler(enteredName); // [TaskItem.js 87]\n    setEnteredName('');\n  }\n\n\n  useEffect(() => {\n    setEnteredName(props.existingName);\n  }, [props.existingName])\n\n\n  return (\n    <Fragment>\n      {\n        (props.isLoggedIn && props.user_id)\n          ?\n          <form onSubmit={props.isEdit ? updateHandler : addTaskHandler}>\n            <input\n              type=\"text\"\n              value={enteredName}\n              placeholder=\"Task Name\"\n              onChange={nameHandler}\n              required />\n            <Button\n              color=\"info\"\n              type=\"submit\">\n              {\n                props.isEdit ? \"Update Task\" : \"Add Task\"\n              }\n            </Button>\n          </form>\n          : <Unauthorized />\n      }\n    </Fragment>\n  );\n};\n\nexport default TaskForm;\n","import React from 'react';\nimport { \n  Button, \n  Container, \n  Card, \n  Row, \n  Col, \n  CardText \n} from 'reactstrap';\n\nexport default function Task(props) {\n  const styles = {\n    padding: \"7px\", \n    margin: \"7px 0\"\n  };\n\n  return (\n    <Container>\n      <Card>\n        <Row>\n          <Col xs=\"6\">\n            <CardText\n              tag=\"h5\"\n              style={styles}\n            >\n              {props.name}\n            </CardText>\n          </Col>\n          \n          <Col>\n            <Button\n              color=\"secondary\"\n              style={styles}\n              onClick={() => props.updateHandler(props.id, props.name, props.user_id, props.i)} // [TaskItem.js 76]\n            >\n              Update\n            </Button>\n          </Col>\n          \n          <Col>\n            <Button\n              color=\"danger\"\n              style={styles}\n              onClick={() => props.deleteHandler(props.id, props.i)} // [TaskItem.js 98]\n            >\n              Delete\n            </Button>\n          </Col>\n        </Row>\n      </Card>\n    </Container>\n  )\n}\n","import { \n  useState, \n  useEffect, \n  Fragment \n} from \"react\";\n\nimport axios from \"axios\";\n\nimport { \n  Button, \n  Container, \n  Alert \n} from \"reactstrap\";\n\nimport TaskForm from \"./TaskForm\";\nimport Task from './Task';\nimport Unauthorized from \"../Unauthorized\";\n\nconst TaskItem = (props) => {\n  const [tasks, setTasks] = useState([]);\n\n\n  // For updating a task\n  const [edit, setEdit] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [existingName, setExistingName] = useState('');\n\n\n  // For error handling\n  const [noRecord, setNoRecord] = useState(true);\n  const printNoTaskMessage = () => {\n    return (<Alert color=\"danger\">No Tasks Found!</Alert>);\n  };\n\n\n  // Fetching Tasks from Backend\n  useEffect(() => {\n    axios\n      .get(`https://todo-list-rails-api.herokuapp.com/users/${props.user_id}/tasks`)\n      .then(res => {\n        if (res.data.status === 404 && props.isLoggedIn) {\n          setNoRecord(true);\n          printNoTaskMessage();\n        }\n        else {\n          setNoRecord(false);\n          const data = Array.from(res.data);\n          const transformedData = data.map((taskData) => {\n            return {\n              id: taskData.id,\n              name: taskData.name,\n              user_id: taskData.user_id\n            }\n          })\n          setTasks(transformedData);\n        }\n      })\n  }, [edit, noRecord, props.user_id, props.isLoggedIn]);\n\n\n  const addNewTaskHandler = (name) => {\n    const taskData = {\n      name: name\n    };\n\n    axios\n      .post(`https://todo-list-rails-api.herokuapp.com/users/${props.user_id}/tasks`, taskData)\n      .then(response => {\n        const lists = [...tasks, response.data];\n        setTasks(lists);\n      })\n      .catch(error => {\n        console.log(\"Adding new Task error: \", error);\n      })\n  };\n\n\n  const updateHandler = (id, name) => {\n    setEdit(true);\n    setIndex(+id);\n    setExistingName(name); \n    // Here, when existingName will change, then it will be passed to TaskForm. There, useEffect will re-render and\n    // Update Task button will come and input form will automatically contain the name of the task whose update button was clicked.\n    // In TaskForm, when Update Task button is clicked, it will call a handler, which in turn will call the following method.\n  }\n\n  const updateTaskHandler = (name) => {\n    const updatedTaskData = {\n      name: name\n    };\n\n    axios\n      .put(`https://todo-list-rails-api.herokuapp.com/users/${props.user_id}/tasks/${index}`, updatedTaskData)\n      .then(() => {\n        setEdit(false);\n      })\n  }\n\n\n  const deleteHandler = (id, i) => {\n    axios\n      .delete(`https://todo-list-rails-api.herokuapp.com/users/${props.user_id}/tasks/${id}`)\n      .then(() => {\n        setTasks((prev) => {\n          if (prev.length !== 0) {\n            setNoRecord(false);\n            const newList = [...prev]\n            newList.splice(i, 1);\n            if (newList.length === 0) {\n              setNoRecord(true);\n              return [];\n            }\n            else {\n              setNoRecord(false);\n              return newList;\n            }\n          }\n          else {\n            setNoRecord(true);\n            return [];\n          }\n        });\n      })\n  }\n\n\n  const handleLogoutClick = () => {\n    axios\n      .delete(\"https://todo-list-rails-api.herokuapp.com/logout\", { withCredentials: true })\n      .then(() => {\n        props.handleLogout();\n        props.history.push(\"/\");\n      })\n      .catch(error => {\n        console.log(\"Logout Error\", error);\n      });\n  };\n\n\n  let printTasks = (tasks.length !== 0 ?\n    tasks.map((task, i) =>\n      <div key={task.id}>\n        <Task\n          key={task.id}\n          id={task.id}\n          i={i}\n          name={task.name}\n          updateHandler={updateHandler}\n          deleteHandler={deleteHandler}\n          user_id={props.user_id}\n        />\n      </div>\n    ) : (noRecord ? printNoTaskMessage() : null)\n  );\n\n  return (\n    <Fragment>\n      {\n        props.isLoggedIn ? (\n          <Container>\n            <div>\n              {\n                props.isLoggedIn && props.user_id &&\n                <Button\n                  color=\"danger\"\n                  onClick={() => handleLogoutClick()}\n                >\n                  Logout\n                </Button>\n              }\n            </div>\n            \n            <div>\n              <TaskForm\n                id={index}\n                existingName={existingName}\n                isEdit={edit}\n                user_id={props.user_id}\n                isLoggedIn={props.isLoggedIn}\n                tasks={tasks}\n                addNewTaskHandler={addNewTaskHandler}\n                updateTaskHandler={updateTaskHandler}\n              />\n            </div>\n\n            <br />\n\n            {printTasks}\n          </Container>\n        ) : <Unauthorized />\n      }\n    </Fragment>\n  );\n};\n\nexport default TaskItem;\n","import React, { Component } from \"react\";\nimport { \n  BrowserRouter, \n  Switch, \n  Route \n} from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"./App.css\";\n\nimport Home from \"./components/Home\";\nimport NavBar from \"./components/NavBar\";\nimport TaskItem from './components/Tasks/TaskItem'\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loggedInStatus: \"NOT_LOGGED_IN\",\n      user: {},\n      isLoggedIn: false\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n\n  checkLoginStatus() {\n    axios\n      .get(\"https://todo-list-rails-api.herokuapp.com/logged_in\", { withCredentials: true })\n      .then((response) => {\n        if (\n          response.data.logged_in &&\n          this.state.loggedInStatus === \"NOT_LOGGED_IN\"\n        ) {\n          this.setState({\n            loggedInStatus: \"LOGGED_IN\",\n            user: response.data.user,\n            isLoggedIn: true\n          });\n        } else if (\n          !response.data.logged_in &\n          (this.state.loggedInStatus === \"LOGGED_IN\")\n        ) {\n          this.setState({\n            loggedInStatus: \"NOT_LOGGED_IN\",\n            user: {},\n            isLoggedIn: false\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"check login error\", error);\n      });\n  }\n\n  componentDidMount() {\n    this.checkLoginStatus();\n  }\n\n  handleLogin(data) {\n    this.setState({\n      loggedInStatus: \"LOGGED_IN\",\n      user: data.user,\n      isLoggedIn: true\n    });\n  }\n\n\n  handleLogout() {\n    this.setState({\n      loggedInStatus: \"NOT_LOGGED_IN\",\n      user: {},\n      isLoggedIn: false\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar isLoggedIn={this.state.isLoggedIn} />     \n        <br />\n        <BrowserRouter>\n          <Switch>\n            <Route\n              exact\n              path={\"/todo-list-frontend\"}\n              render={props => (\n                <Home\n                  {...props}\n                  handleLogin={this.handleLogin}\n                  handleLogout={this.handleLogout}\n                  loggedInStatus={this.state.loggedInStatus}\n                />\n              )}\n            />\n            <Route\n              exact\n              path={\"/todo-list-frontend/dashboard\"}\n              render={props => (\n                <TaskItem\n                  {...props}\n                  loggedInStatus={this.state.loggedInStatus}\n                  handleLogout={this.handleLogout}\n                  user_id={this.state.user.id}\n                  isLoggedIn={this.state.isLoggedIn}\n                />\n              )}\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}