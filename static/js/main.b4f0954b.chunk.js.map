{"version":3,"sources":["components/auth/Registration.js","components/auth/Login.js","components/Home.js","components/NavBar.js","components/Unauthorized.js","components/Tasks/TaskForm.js","components/Tasks/Task.js","components/Tasks/TaskItem.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","props","useState","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","Form","onSubmit","event","axios","post","user","password_confirmation","withCredentials","then","response","data","status","handleSuccessfulAuth","catch","error","console","log","preventDefault","FormGroup","Input","type","name","placeholder","value","onChange","target","required","Button","color","Login","logged_in","alert","Home","history","useHistory","handleLogin","push","isLoggedIn","onClick","delete","handleLogout","Container","Row","xs","Col","sm","Card","CardTitle","tag","NavBar","Navbar","light","expand","NavbarBrand","href","Nav","className","navbar","NavItem","NavLink","Unauthorized","Alert","to","TaskForm","enteredName","setEnteredName","useEffect","existingName","user_id","isEdit","updateTaskHandler","addNewTaskHandler","Task","styles","padding","margin","CardText","style","updateHandler","id","i","deleteHandler","TaskItem","tasks","setTasks","edit","setEdit","index","setIndex","setExistingName","noRecord","setNoRecord","printNoTaskMessage","get","res","transformedData","Array","from","map","taskData","prev","length","newList","splice","printTasks","task","lists","updatedTaskData","put","App","setUser","setIsLoggedIn","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4f0954b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from \"axios\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input\n} from \"reactstrap\";\n\nconst Registration = (props) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n\n  const emailHandler = (event) => {\n    setEmail(event.target.value);\n  }\n\n  const passwordHandler = (event) => {\n    setPassword(event.target.value);\n  }\n\n  const passwordConfirmationHandler = (event) => {\n    setPasswordConfirmation(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n    axios\n      .post(\n        \"https://todo-list-rails-api.herokuapp.com/registrations\",\n        {\n          user: {\n            email: email,\n            password: password,\n            password_confirmation: passwordConfirmation\n          }\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        if (response.data.status === \"created\") {\n          props.handleSuccessfulAuth(response.data); // [Home.js 20]\n        }\n      })\n      .catch((error) => {\n        console.log(\"Registration Error: \", error);\n      });\n\n    event.preventDefault();\n  }\n\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={emailHandler}\n            required\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={passwordHandler}\n            required\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Input\n            type=\"password\"\n            name=\"password_confirmation\"\n            placeholder=\"Password Confirmation\"\n            value={passwordConfirmation}\n            onChange={passwordConfirmationHandler}\n            required\n          />\n        </FormGroup>\n\n        <Button color=\"primary\" type=\"submit\">Register</Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default Registration;\n","import React, { useState } from 'react';\n\nimport axios from \"axios\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input\n} from \"reactstrap\";\n\n\nconst Login = (props) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const emailHandler = (event) => {\n    setEmail(event.target.value);\n  }\n\n  const passwordHandler = (event) => {\n    setPassword(event.target.value);\n  }\n\n  const submitHandler = (event) => {\n    axios\n      .post(\n        \"https://todo-list-rails-api.herokuapp.com/sessions\",\n        {\n          user: {\n            email: email,\n            password: password\n          }\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        if (response.data.logged_in) {\n          props.handleSuccessfulAuth(response.data); // [Home.js 20]\n        }\n        else {\n          alert(\"User does not exist. Please Register first.\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"Login Error: \", error);\n      });\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <Form onSubmit={submitHandler}>\n        <FormGroup>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={emailHandler}\n            required\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={passwordHandler}\n            required\n          />\n        </FormGroup>\n\n        <Button type=\"submit\">Login</Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default Login;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport axios from \"axios\";\nimport {\n  Button,\n  Card,\n  CardTitle,\n  Row,\n  Col,\n  Container\n} from 'reactstrap';\n\nimport Registration from \"./auth/Registration\";\nimport Login from \"./auth/Login\";\n\nconst Home = (props) => {\n  const history = useHistory();\n\n  const handleSuccessfulAuth = (data) => {\n    props.handleLogin(data); // [App.js 40]\n    history.push(\"/todo-list-frontend/dashboard\");\n  }\n\n  const handleLogoutClick = () => {\n    axios\n      .delete(\"https://todo-list-rails-api.herokuapp.com/logout\", { withCredentials: true })\n      .then((response) => {\n        history.push(\"/todo-list-frontend\");\n        props.handleLogout(); // [App.js 45]\n      })\n      .catch(error => {\n        console.log(\"Logout Error: \", error);\n      });\n  }\n\n\n  return (\n    <div>\n      {\n        props.isLoggedIn ?\n          (\n            <Button color=\"danger\" onClick={() => handleLogoutClick()}>Logout</Button>\n          ) :\n          (\n            <Container>\n              <Row xs=\"5\">\n                <Col sm=\"6\">\n                  <Card>\n                    <CardTitle tag=\"h5\">Registration</CardTitle>\n                    <Registration handleSuccessfulAuth={handleSuccessfulAuth} />\n                  </Card>\n                </Col>\n                <Col sm=\"6\">\n                  <Card>\n                    <CardTitle tag=\"h5\">Login</CardTitle>\n                    <Login handleSuccessfulAuth={handleSuccessfulAuth} />\n                  </Card>\n                </Col>\n              </Row>\n            </Container>\n          )\n      }\n    </div>\n  )\n}\n\nexport default Home;\n","import { \n  Navbar, \n  NavbarBrand, \n  Nav, \n  NavItem, \n  NavLink \n} from \"reactstrap\";\n\nconst NavBar = (props) => {\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"https://kishan-aghera.github.io/todo-list-frontend/\">To-do List</NavbarBrand>\n        \n        <Nav className=\"mr-auto\" navbar>\n          {\n            props.isLoggedIn ? (\n              <NavItem>\n                <NavLink href=\"/todo-list-frontend/dashboard\">Dashboard</NavLink>\n              </NavItem>\n            ) : null\n          }\n          \n          <NavItem>\n            <NavLink target=\"_blank\" href=\"https://github.com/kishan-aghera/todo-list-frontend\">Frontend React App Github</NavLink>\n          </NavItem>\n          \n          <NavItem>\n            <NavLink target=\"_blank\" href=\"https://github.com/kishan-aghera/todo-list-backend\">Backend Rails API Github</NavLink>\n          </NavItem>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import { Link } from 'react-router-dom';\nimport { \n  Alert, \n  Container \n} from 'reactstrap';\n\nconst Unauthorized = () => {\n  return (\n    <Container>\n      <Alert color=\"danger\">\n        Please Login and then you can use this feature.\n        <br />\n        You can get Login or Register by visiting the following link.\n        <br />\n        <Link to=\"/todo-list-frontend\">Home</Link>\n      </Alert>\n    </Container>\n  )\n};\n\nexport default Unauthorized;\n","import {\n  useState,\n  Fragment,\n  useEffect\n} from \"react\";\nimport { Button } from \"reactstrap\";\n\nimport Unauthorized from \"../Unauthorized\";\n\nconst TaskForm = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n\n  const nameHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const addTaskHandler = (event) => {\n    event.preventDefault();\n    props.addNewTaskHandler(enteredName); // [TaskItem.js 64]\n    setEnteredName('');\n  }\n\n  const updateHandler = (event) => {\n    event.preventDefault();\n    props.updateTaskHandler(enteredName); // [TaskItem.js 90]\n    setEnteredName('');\n  }\n\n\n  useEffect(() => {\n    setEnteredName(props.existingName);\n  }, [props.existingName])\n\n\n  return (\n    <Fragment>\n      {\n        (props.isLoggedIn && props.user_id)\n          ?\n          <form onSubmit={props.isEdit ? updateHandler : addTaskHandler}>\n            <input\n              type=\"text\"\n              value={enteredName}\n              placeholder=\"Task Name\"\n              onChange={nameHandler}\n              required />\n            <Button\n              color=\"info\"\n              type=\"submit\">\n              {\n                props.isEdit ? \"Update Task\" : \"Add Task\"\n              }\n            </Button>\n          </form>\n          : <Unauthorized />\n      }\n    </Fragment>\n  );\n};\n\nexport default TaskForm;\n","import { \n  Button, \n  Container, \n  Card, \n  Row, \n  Col, \n  CardText \n} from 'reactstrap';\n\nconst Task = (props) => {\n  const styles = {\n    padding: \"7px\", \n    margin: \"7px 0\"\n  };\n\n  return (\n    <Container>\n      <Card>\n        <Row>\n          <Col xs=\"6\">\n            <CardText\n              tag=\"h5\"\n              style={styles}\n            >\n              {props.name}\n            </CardText>\n          </Col>\n          \n          <Col>\n            <Button\n              color=\"secondary\"\n              style={styles}\n              onClick={() => props.updateHandler(props.id, props.name, props.user_id, props.i)} // [TaskItem.js 81]\n            >\n              Update\n            </Button>\n          </Col>\n          \n          <Col>\n            <Button\n              color=\"danger\"\n              style={styles}\n              onClick={() => props.deleteHandler(props.id, props.i)} // [TaskItem.js 103]\n            >\n              Delete\n            </Button>\n          </Col>\n        </Row>\n      </Card>\n    </Container>\n  )\n}\n\nexport default Task;\n","import { \n  useState, \n  useEffect, \n  Fragment\n} from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport axios from \"axios\";\n\nimport { \n  Button, \n  Container, \n  Alert \n} from \"reactstrap\";\n\nimport TaskForm from \"./TaskForm\";\nimport Task from './Task';\nimport Unauthorized from \"../Unauthorized\";\n\nconst TaskItem = (props) => {\n  const [tasks, setTasks] = useState([]);\n  const history = useHistory();\n\n\n  // For updating a task\n  const [edit, setEdit] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [existingName, setExistingName] = useState('');\n\n\n  // For error handling\n  const [noRecord, setNoRecord] = useState(true);\n  const printNoTaskMessage = () => {\n    return (<Alert color=\"danger\">No Tasks Found!</Alert>);\n  };\n\n\n  // Fetching Tasks from Backend\n  useEffect(() => {\n    props.isLoggedIn &&\n    (axios\n      .get(`https://todo-list-rails-api.herokuapp.com/users/${props.user_id}/tasks`)\n      .then(res => {\n        if (res.data.status === 404 && props.isLoggedIn) {\n          setNoRecord(true);\n          printNoTaskMessage();\n        }\n        else {\n          setNoRecord(false);\n          const data = Array.from(res.data);\n          const transformedData = data.map((taskData) => {\n            return {\n              id: taskData.id,\n              name: taskData.name,\n              user_id: taskData.user_id\n            }\n          })\n          setTasks(transformedData);\n        }\n      }))\n  }, [edit, noRecord, props.user_id, props.isLoggedIn]);\n\n\n  const addNewTaskHandler = (name) => {\n    const taskData = {\n      name: name\n    };\n\n    axios\n      .post(`https://todo-list-rails-api.herokuapp.com/users/${props.user_id}/tasks`, taskData)\n      .then(response => {\n        const lists = [...tasks, response.data];\n        setTasks(lists);\n      })\n      .catch(error => {\n        console.log(\"Adding new Task error: \", error);\n      })\n  };\n\n\n  const updateHandler = (id, name) => {\n    setEdit(true);\n    setIndex(+id);\n    setExistingName(name); \n    // Here, when existingName will change, then it will be passed to TaskForm. There, useEffect will re-render and\n    // Update Task button will come and input form will automatically contain the name of the task whose update button was clicked.\n    // In TaskForm, when Update Task button is clicked, it will call a handler, which in turn will call the following method.\n  }\n\n  const updateTaskHandler = (name) => {\n    const updatedTaskData = {\n      name: name\n    };\n\n    axios\n      .put(`https://todo-list-rails-api.herokuapp.com/users/${props.user_id}/tasks/${index}`, updatedTaskData)\n      .then(() => {\n        setEdit(false);\n      })\n  }\n\n\n  const deleteHandler = (id, i) => {\n    axios\n      .delete(`https://todo-list-rails-api.herokuapp.com/users/${props.user_id}/tasks/${id}`)\n      .then(() => {\n        setTasks((prev) => {\n          if (prev.length !== 0) {\n            setNoRecord(false);\n            const newList = [...prev];\n            newList.splice(i, 1);\n            if (newList.length === 0) {\n              setNoRecord(true);\n              return [];\n            }\n            else {\n              setNoRecord(false);\n              return newList;\n            }\n          }\n          else {\n            setNoRecord(true);\n            return [];\n          }\n        });\n      })\n  }\n\n\n  const handleLogoutClick = () => {\n    axios\n      .delete(\"https://todo-list-rails-api.herokuapp.com/logout\", { withCredentials: true })\n      .then(() => {\n        props.handleLogout(); // [App.js 45]\n        history.push(\"/todo-list-frontend\");\n      })\n      .catch(error => {\n        console.log(\"Logout Error\", error);\n      });\n  };\n\n\n  let printTasks = (tasks.length !== 0 ?\n    tasks.map((task, i) =>\n      <div key={task.id}>\n        <Task\n          key={task.id}\n          id={task.id}\n          i={i}\n          name={task.name}\n          updateHandler={updateHandler}\n          deleteHandler={deleteHandler}\n          user_id={props.user_id}\n        />\n      </div>\n    ) : (noRecord ? printNoTaskMessage() : null)\n  );\n\n  return (\n    <Fragment>\n      {\n        props.isLoggedIn ? (\n          <Container>\n            <div>\n              {\n                props.isLoggedIn && props.user_id &&\n                <Button\n                  color=\"danger\"\n                  onClick={() => handleLogoutClick()}\n                >\n                  Logout\n                </Button>\n              }\n            </div>\n            \n            <div>\n              <TaskForm\n                id={index}\n                existingName={existingName}\n                isEdit={edit}\n                user_id={props.user_id}\n                isLoggedIn={props.isLoggedIn}\n                tasks={tasks}\n                addNewTaskHandler={addNewTaskHandler}\n                updateTaskHandler={updateTaskHandler}\n              />\n            </div>\n\n            <br />\n\n            {printTasks}\n          </Container>\n        ) : <Unauthorized />\n      }\n    </Fragment>\n  );\n};\n\nexport default TaskItem;\n","import React, { useEffect, useState } from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"./App.css\";\n\nimport Home from \"./components/Home\";\nimport NavBar from \"./components/NavBar\";\nimport TaskItem from './components/Tasks/TaskItem';\n\nconst App = () => {\n  const [user, setUser] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(\"https://todo-list-rails-api.herokuapp.com/logged_in\", { withCredentials: true })\n      .then((response) => {\n        if (\n          response.data.logged_in && !isLoggedIn\n        ) {\n          setIsLoggedIn(true);\n          setUser(response.data.user);\n        } else if (\n          !response.data.logged_in & isLoggedIn\n        ) {\n          setIsLoggedIn(false);\n          setUser({});\n        }\n      })\n      .catch((error) => {\n        console.log(\"Check Login Error: \", error);\n      });\n  }, [isLoggedIn]);\n\n  const handleLogin = (data) => {\n    setIsLoggedIn(true);\n    setUser(data.user);\n  }\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setUser({});\n  }\n\n\n  return (\n    <div className=\"App\">\n      <NavBar isLoggedIn={isLoggedIn} />\n      <br />\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path={\"/todo-list-frontend/dashboard\"}\n            render={props => (\n              <TaskItem\n                {...props}\n                handleLogout={handleLogout}\n                user_id={user.id}\n                isLoggedIn={isLoggedIn}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path={\"/todo-list-frontend\"}\n            render={props => (\n              <Home\n                {...props}\n                handleLogin={handleLogin}\n                handleLogout={handleLogout}\n              />\n            )}\n          />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}